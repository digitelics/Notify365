"""
Django settings for Notify365 project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from celery.schedules import crontab


'''ASGI_APPLICATION = 'Notify365.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',  # Utiliza este para pruebas, para producción considera usar Redis o similar
    },
}'''

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
BASE_URL = "http://localhost:8000/"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(#z#8w_izv%9gesuu=3_2--xiq02!!m&$e!yy$l4-akh#7l#m6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '3a55-2601-586-c501-66f0-f566-c716-d89-c1.ngrok-free.app']

CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', 

    'channels', 
    'settings',
    'logs',
    'notifications',
    'automatizations',
    'customers',
    'dashboard', 
    'schedules',  
    'security',
    'webcall',
    'simple_history',
    'django_celery_beat',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'Notify365.middlewares.AutoLogoutMiddleware', 
    'simple_history.middleware.HistoryRequestMiddleware',
]

ROOT_URLCONF = 'Notify365.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'utils.context_processors.user_context_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'Notify365.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "notify365",
        "USER": "doadmin",
        "PASSWORD": "AVNS_bw1W65lBHbqt6AgGRst",
        "HOST": "db-postgresql-nyc3-notify365-do-user-11845072-0.c.db.ondigitalocean.com",
        "PORT": "25060",
    }
}

TEMPLATE_CONTEXT_PROCESSORS = [
    'django.template.context_processors.debug',
    'django.template.context_processors.request',
]



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# MEDIA_URL =  'static/images/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
    '/var/www/static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'security.CustomUser'
LOGIN_URL = '/login/'

# Configura la duración de la sesión en segundos
SESSION_COOKIE_AGE = 1800  # 30 minutos

# Configura para que la sesión se cierre al cerrar el navegador
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Asegúrate de que Django actualice la sesión con cada solicitud
SESSION_SAVE_EVERY_REQUEST = True


CELERY_BROKER_URL = 'redis://localhost:6379/0'  # o el broker que estés utilizando
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_BEAT_SCHEDULE = {
    'send-birthday-notifications-everyday': {
        'task': 'notification.tasks.send_birthday_notifications',
        'schedule': crontab(hour=0, minute=0),  # Se ejecuta todos los días a la medianoche
    },
    'send-document-notifications-everyday': {
        'task': 'notification.tasks.send_document_notifications',
        'schedule': crontab(hour=0, minute=0),  # Se ejecuta todos los días a la medianoche
    },
    'send-expiry-notifications-everyday': {
        'task': 'notification.tasks.send_expiry_notifications',
        'schedule': crontab(hour=0, minute=0),  # Se ejecuta todos los días a la medianoche
    },
    'send-next-expiry-notifications-everyday': {
        'task': 'notification.tasks.send_next_expiry_notifications',
        'schedule': crontab(hour=0, minute=0),  # Se ejecuta todos los días a la medianoche
    },
    'send-expiry-tomorrow-notifications-everyday': {
        'task': 'notification.tasks.send_expiry_tomorrow_notifications',
        'schedule': crontab(hour=0, minute=0),  # Se ejecuta todos los días a la medianoche
    },
}
